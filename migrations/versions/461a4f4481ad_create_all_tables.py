"""create all tables

Revision ID: 461a4f4481ad
Revises: 
Create Date: 2025-07-24 16:10:22.456063

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '461a4f4481ad'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('soil_types_reference',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('soil_type_name', sa.String(), nullable=False),
    sa.Column('local_name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('characteristics', sa.JSON(), nullable=True),
    sa.Column('common_locations', sa.Text(), nullable=True),
    sa.Column('suitable_crops', sa.Text(), nullable=True),
    sa.Column('management_tips', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('soil_type_name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('province', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('weather_data',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=11, scale=8), nullable=True),
    sa.Column('current_temperature', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('current_humidity', sa.Integer(), nullable=True),
    sa.Column('current_rainfall', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('current_wind_speed', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('current_pressure', sa.Numeric(precision=7, scale=2), nullable=True),
    sa.Column('forecast_7days', sa.JSON(), nullable=True),
    sa.Column('forecast_14days', sa.JSON(), nullable=True),
    sa.Column('season', sa.String(), nullable=True),
    sa.Column('weather_warnings', sa.Text(), nullable=True),
    sa.Column('data_source', sa.String(), nullable=True),
    sa.Column('fetched_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('soil_analyses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('soil_color', sa.String(), nullable=True),
    sa.Column('soil_texture', sa.String(), nullable=True),
    sa.Column('soil_drainage', sa.String(), nullable=True),
    sa.Column('soil_location_type', sa.String(), nullable=True),
    sa.Column('soil_fertility', sa.String(), nullable=True),
    sa.Column('soil_moisture', sa.String(), nullable=True),
    sa.Column('latitude', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=11, scale=8), nullable=True),
    sa.Column('province', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('classified_soil_type', sa.String(), nullable=True),
    sa.Column('classification_confidence', sa.String(), nullable=True),
    sa.Column('classification_method', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('claude_api_calls', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crop_predictions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('soil_analysis_id', sa.UUID(), nullable=False),
    sa.Column('weather_data_id', sa.UUID(), nullable=True),
    sa.Column('recommended_crops', sa.JSON(), nullable=True),
    sa.Column('seasonal_advice', sa.Text(), nullable=True),
    sa.Column('weather_warnings', sa.Text(), nullable=True),
    sa.Column('soil_treatments', sa.JSON(), nullable=True),
    sa.Column('risk_factors', sa.JSON(), nullable=True),
    sa.Column('success_probability', sa.Integer(), nullable=True),
    sa.Column('best_planting_date', sa.Date(), nullable=True),
    sa.Column('expected_harvest_date', sa.Date(), nullable=True),
    sa.Column('planting_window_start', sa.Date(), nullable=True),
    sa.Column('planting_window_end', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['soil_analysis_id'], ['soil_analyses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('soil_photos',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('soil_analysis_id', sa.UUID(), nullable=False),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.Column('photo_filename', sa.String(), nullable=True),
    sa.Column('analysis_result', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['soil_analysis_id'], ['soil_analyses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crop_recommendations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('crop_prediction_id', sa.UUID(), nullable=False),
    sa.Column('crop_name', sa.String(), nullable=True),
    sa.Column('crop_category', sa.String(), nullable=True),
    sa.Column('suitability_score', sa.Integer(), nullable=True),
    sa.Column('suitability_level', sa.String(), nullable=True),
    sa.Column('planting_method', sa.Text(), nullable=True),
    sa.Column('spacing_recommendation', sa.String(), nullable=True),
    sa.Column('seed_variety_suggestions', sa.Text(), nullable=True),
    sa.Column('expected_yield_per_hectare', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('fertilizer_schedule', sa.JSON(), nullable=True),
    sa.Column('watering_schedule', sa.Text(), nullable=True),
    sa.Column('pest_control_measures', sa.JSON(), nullable=True),
    sa.Column('harvesting_indicators', sa.Text(), nullable=True),
    sa.Column('estimated_cost_per_hectare', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('estimated_revenue_per_hectare', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('market_demand_level', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['crop_prediction_id'], ['crop_predictions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('crop_recommendations')
    op.drop_table('soil_photos')
    op.drop_table('crop_predictions')
    op.drop_table('soil_analyses')
    op.drop_table('weather_data')
    op.drop_table('users')
    op.drop_table('soil_types_reference')
    # ### end Alembic commands ###
